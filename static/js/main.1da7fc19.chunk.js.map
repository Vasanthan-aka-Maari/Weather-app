{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","city","setCity","icon","setIcon","weather","setWeather","base_url","icon_url","useEffect","className","onSubmit","e","preventDefault","axios","get","then","res","data","catch","err","console","log","type","placeholder","value","onChange","target","name","src","alt","main","temp","humidity","pressure","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAqDeA,MAlDf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAEWF,mBAAS,IAFpB,mBAENG,EAFM,KAEAC,EAFA,OAGiBJ,mBAAS,MAH1B,mBAGNK,EAHM,KAGGC,EAHH,KAKPC,EAAQ,4DAAwDN,EAAxD,+BADE,oCAEVO,EAAQ,0CAAsCL,EAAtC,QAed,OAdAM,qBAAU,WACRJ,GAAWD,EAAQC,EAAQA,QAAQ,GAAGF,QACrC,CAACE,IAaF,sBAAKK,UAAU,MAAf,UACE,uBAAMC,SAZY,SAACC,GACrBA,EAAEC,iBACFC,IACGC,IAAIR,GACJS,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBF,MAAK,SAACE,GAAD,OAAUZ,EAAWY,MAC1BC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAC9BlB,EAAQ,KAKyBQ,UAAU,WAAzC,UACE,uBACEa,KAAK,OACLC,YAAY,OACZC,MAAOxB,EACPyB,SAAU,SAACd,GAAD,OAAOV,EAAQU,EAAEe,OAAOF,UAEpC,wBAAQF,KAAK,SAAb,uBAEDlB,GACC,sBAAKK,UAAU,iBAAf,UACE,qBAAKA,UAAU,QAAf,SAAwBL,EAAQuB,OAChC,sBAAKlB,UAAU,eAAf,UACE,qBAAKmB,IAAKrB,EAAUsB,IAAKzB,EAAQA,QAAQ,GAAG0B,OAC5C,6BAAK1B,EAAQA,QAAQ,GAAG0B,UAE1B,sBAAKrB,UAAU,YAAf,UACE,oBAAGA,UAAU,OAAb,0BAAkCL,EAAQ0B,KAAKC,KAA/C,WACA,oBAAGtB,UAAU,WAAb,uBAAmCL,EAAQ0B,KAAKE,YAChD,oBAAGvB,UAAU,WAAb,uBAAmCL,EAAQ0B,KAAKG,sBCjC7CC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1da7fc19.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [city, setCity] = useState(\"\");\n  const [icon, setIcon] = useState(\"\");\n  const [weather, setWeather] = useState(null);\n  const API_KEY = \"80756e28d64b76871c2302454e31f47a\";\n  const base_url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_KEY}`;\n  const icon_url = `http://openweathermap.org/img/w/${icon}.png`;\n  useEffect(() => {\n    weather && setIcon(weather.weather[0].icon);\n  }, [weather]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    axios\n      .get(base_url)\n      .then((res) => res.data)\n      .then((data) => setWeather(data))\n      .catch((err) => console.log(err));\n    setCity(\"\");\n  };\n\n  return (\n    <div className=\"app\">\n      <form onSubmit={submitHandler} className=\"app-form\">\n        <input\n          type=\"text\"\n          placeholder=\"city\"\n          value={city}\n          onChange={(e) => setCity(e.target.value)}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      {weather && (\n        <div className=\"hero-container\">\n          <div className=\"place\">{weather.name}</div>\n          <div className=\"main-weather\">\n            <img src={icon_url} alt={weather.weather[0].main} />\n            <h1>{weather.weather[0].main}</h1>\n          </div>\n          <div className=\"container\">\n            <p className=\"temp\">Temperature: {weather.main.temp}Â°C</p>\n            <p className=\"humidity\">Humidity: {weather.main.humidity}</p>\n            <p className=\"pressure\">Pressure: {weather.main.pressure}</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}